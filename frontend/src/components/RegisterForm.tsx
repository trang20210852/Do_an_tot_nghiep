import React, { useEffect, useState } from "react";
import { registerTruongHoc, registerCanBo, registerPhuHuynh } from "../services/apiAuth";
import { useNavigate } from "react-router-dom";
import { getDanhSachTruong } from "../services/apiTruongHoc";

interface RegisterFormProps {
    role: string;
}

const RegisterForm: React.FC<RegisterFormProps> = ({ role }) => {
    const [formData, setFormData] = useState<any>({
        tenTruong: "",
        diaChi: "",
        SDT: "",
        email: "",
        ngayThanhLap: "",
        matKhau: "",
        nhapLaiMatKhau: "",
        hoTen: "",
        gioiTinh: "",
        ngaySinh: "",
        IDTruong: "",
    });
    const [gioiTinh, setGioiTinh] = useState("");

    const [error, setError] = useState("");
    const navigate = useNavigate(); // D√πng ƒë·ªÉ chuy·ªÉn trang
    const [showPassword, setShowPassword] = useState(false);

    const [danhSachTruong, setDanhSachTruong] = useState<{ IDTruong: number; tenTruong: string }[]>([]);
    const [truongDuocChon, setTruongDuocChon] = useState<number | null>(null);
    useEffect(() => {
        const fetchData = async () => {
            const data = await getDanhSachTruong();
            setDanhSachTruong(data);
        };
        fetchData();
    }, []);
    const togglePasswordVisibility = () => {
        setShowPassword((prev) => !prev);
    };
    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
        setFormData({ ...formData, [e.target.name]: e.target.value });
    };
    const handleGioiTinhChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
        setGioiTinh(e.target.value);
        setFormData({ ...formData, gioiTinh: e.target.value });
    };
    const handleTruongChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
        setTruongDuocChon(Number(e.target.value));
        setFormData({ ...formData, IDTruong: e.target.value });
    };

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        if (formData.matKhau !== formData.nhapLaiMatKhau) {
            setError("M·∫≠t kh·∫©u nh·∫≠p l·∫°i kh√¥ng kh·ªõp");
            return;
        }
        setError("");
        console.log("Gi√° tr·ªã gioiTinh tr∆∞·ªõc khi g·ª≠i:", gioiTinh);
        console.log("Gi√° tr·ªã truong tr∆∞·ªõc khi g·ª≠i:", truongDuocChon);

        try {
            let response;
            if (role === "Tr∆∞·ªùng H·ªçc") {
                response = await registerTruongHoc({
                    tenTruong: formData.tenTruong,
                    diaChi: formData.diaChi,
                    SDT: formData.SDT,
                    email_business: formData.email_business,
                    email_hieutruong: formData.email_hieutruong,
                    ngayThanhLap: formData.ngayThanhLap,
                });
            } else if (role === "C√°n B·ªô") {
                response = await registerCanBo({
                    hoTen: formData.hoTen,
                    gioiTinh: formData.gioiTinh,
                    ngaySinh: formData.ngaySinh,
                    diaChi: formData.diaChi,
                    SDT: formData.SDT,
                    email: formData.email,
                    IDTruong: Number(formData.IDTruong),
                    matKhau: formData.matKhau,
                });

                alert("ƒêƒÉng k√Ω th√†nh c√¥ng, vui l√≤ng ch·ªù duy·ªát.");
                navigate("/"); // Quay v·ªÅ landing page
                return;
            } else if (role === "Ph·ª• Huynh") {
                response = await registerPhuHuynh({
                    hoTen: formData.hoTen,
                    gioiTinh: formData.gioiTinh,
                    ngaySinh: formData.ngaySinh,
                    diaChi: formData.diaChi,
                    SDT: formData.SDT,
                    email: formData.email,
                    matKhau: formData.matKhau,
                });
            }

            alert("ƒêƒÉng k√Ω th√†nh c√¥ng!");
            navigate("/dashboard"); // Chuy·ªÉn ƒë·∫øn dashboard n·∫øu kh√¥ng ph·∫£i C√°n b·ªô
        } catch (err: any) {
            setError(err.response?.data?.error || "ƒêƒÉng k√Ω th·∫•t b·∫°i");
        }
    };

    return (
        <div className="flex justify-center items-center min-h-screen bg-[#f8f1e8] bg-orange-50">
            <div className="flex max-w-4xl bg-white rounded-lg shadow-lg overflow-hidden max-h-[650px]">
                {/* C·ªôt h√¨nh ·∫£nh */}
                <div className="hidden md:block  w-1/2 relative">
                    <img
                        src="https://kidsactivitiesblog.com/wp-content/uploads/2013/02/Good-Friend.png" // üî• S·ª≠ d·ª•ng ·∫£nh b·∫°n ƒë√£ t·∫£i l√™n
                        alt="Login Background"
                        className="h-full w-full"
                    />
                </div>
                <div className="w-2/3 p-12 flex flex-col justify-center bg-[#fff7eb] max-h-[650px]">
                    <h2 className="text-2xl font-bold text-center mb-6">ƒêƒÉng K√≠ - {role}</h2>
                    <h3 className="text-center mb-2 mt-1">Ch√†o m·ª´ng ƒë·∫øn v·ªõi h·ªá th·ªëng qu·∫£n l√≠ M·∫ßm non Xanh</h3>
                    <form onSubmit={handleSubmit}>
                        {role === "Tr∆∞·ªùng H·ªçc" && (
                            <>
                                <div className="mt-5 mb-5 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">T√™n tr∆∞·ªùng :</label>
                                    <input type="text" name="tenTruong" placeholder="T√™n tr∆∞·ªùng" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-5 mb-5 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">ƒê·ªãa ch·ªâ :</label>
                                    <input type="text" name="diaChi" placeholder="ƒê·ªãa ch·ªâ" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-5 mb-5 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">S·ªë ƒëi·ªán tho·∫°i :</label>
                                    <input type="text" name="SDT" placeholder="S·ªë ƒëi·ªán tho·∫°i" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-5 mb-5 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">Email tr∆∞·ªùng:</label>
                                    <input type="email" name="email_business" placeholder="Email Tr∆∞·ªùng" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-5 mb-5 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">Email hi·ªáu tr∆∞·ªüng:</label>
                                    <input type="email" name="email_hieutruong" placeholder="Email Hi·ªáu Tr∆∞·ªüng" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-5 mb-5 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">Ng√†y th√†nh l·∫≠p :</label>
                                    <input type="date" name="ngayThanhLap" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                            </>
                        )}

                        {role === "C√°n B·ªô" && (
                            <>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">H·ªç t√™n :</label>
                                    <input type="text" name="hoTen" placeholder="H·ªç t√™n" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">Gi·ªõi t√≠nh :</label>

                                    <select name="gioiTinh px-6" value={gioiTinh} onChange={handleGioiTinhChange} className="border rounded-lg px-4 py-2 w-3/4">
                                        <option value="">Ch·ªçn gi·ªõi t√≠nh</option>
                                        <option value="Nam">Nam</option>
                                        <option value="N·ªØ">N·ªØ</option>
                                    </select>
                                </div>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">Ng√†y sinh :</label>
                                    <input type="date" name="ngaySinh" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">ƒê·ªãa ch·ªâ :</label>
                                    <input type="text" name="diaChi" placeholder="ƒê·ªãa ch·ªâ" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">S·ªë ƒëi·ªán tho·∫°i :</label>
                                    <input type="text" name="SDT" placeholder="S·ªë ƒëi·ªán tho·∫°i" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">Email :</label>
                                    <input type="email" name="email" placeholder="Email" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">T√™n Tr∆∞·ªùng :</label>

                                    <select name="IDTruong" className="border rounded-lg px-4 py-2 w-3/4" value={truongDuocChon || ""} onChange={handleTruongChange}>
                                        <option value="">Ch·ªçn tr∆∞·ªùng h·ªçc</option>
                                        {danhSachTruong.map((truong) => (
                                            <option key={truong.IDTruong} value={truong.IDTruong}>
                                                {truong.tenTruong}
                                            </option>
                                        ))}
                                    </select>
                                </div>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">M·∫≠t kh·∫©u :</label>
                                    <input type="password" name="matKhau" placeholder="M·∫≠t kh·∫©u" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">Nh·∫≠p l·∫°i m·∫≠t kh·∫©u </label>
                                    <input type="password" name="nhapLaiMatKhau" placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                {error && <p className="text-red-500">{error}</p>}
                            </>
                        )}

                        {role === "Ph·ª• Huynh" && (
                            <>
                                <div className="mt-5 mb-5 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">H·ªç t√™n :</label>
                                    <input type="text" name="hoTen" placeholder="H·ªç t√™n" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-5 mb-5 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">Gi·ªõi t√≠nh :</label>
                                    <select name="gioiTinh px-6" value={gioiTinh} onChange={handleGioiTinhChange} className="border rounded-lg px-4 py-2 w-3/4">
                                        <option value="">Ch·ªçn gi·ªõi t√≠nh</option>
                                        <option value="Nam">Nam</option>
                                        <option value="N·ªØ">N·ªØ</option>
                                    </select>
                                </div>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">Ng√†y sinh :</label>
                                    <input type="date" name="ngaySinh" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">ƒê·ªãa ch·ªâ :</label>
                                    <input type="text" name="diaChi" placeholder="ƒê·ªãa ch·ªâ" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">S·ªë ƒëi·ªán tho·∫°i :</label>
                                    <input type="text" name="SDT" placeholder="S·ªë ƒëi·ªán tho·∫°i" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">Email :</label>
                                    <input type="email" name="email" placeholder="Email" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">M·∫≠t kh·∫©u :</label>
                                    <input type="password" name="matKhau" placeholder="M·∫≠t kh·∫©u" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                <div className="mt-2 mb-2 w-full flex items-center justify-between">
                                    <label className="w-1/2 px-6">Nh·∫≠p l·∫°i m·∫≠t kh·∫©u </label>
                                    <input type="password" name="nhapLaiMatKhau" placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u" onChange={handleChange} className="border rounded-lg px-4 py-2 w-3/4" />
                                </div>
                                {error && <p className="text-red-500">{error}</p>}
                            </>
                        )}

                        <div className="flex justify-center">
                            <button type="submit" className="w-3/4 bg-black text-white font-semibold rounded-md px-4 py-3 hover:bg-gray-800 transition duration-200">
                                ƒêƒÉng k√Ω
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    );
};

export default RegisterForm;
